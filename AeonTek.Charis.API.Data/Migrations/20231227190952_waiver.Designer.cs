// <auto-generated />
using System;
using AeonTek.Charis.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AeonTek.Charis.API.Migrations
{
    [DbContext(typeof(OrganizationContext))]
    [Migration("20231227190952_waiver")]
    partial class waiver
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AeonTek.Charis.API.Data.ValueObjects.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<bool>("AllowText")
                        .HasColumnType("boolean");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<Guid?>("VolunteerId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("VolunteerId");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("AeonTek.Charis.API.Data.ValueObjects.Volunteer", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Volunteers");
                });

            modelBuilder.Entity("AeonTek.Charis.API.Data.ValueObjects.Waiver", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("SignedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Version")
                        .HasColumnType("integer");

                    b.Property<Guid?>("VolunteerId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("VolunteerId");

                    b.ToTable("Waiver");
                });

            modelBuilder.Entity("AeonTek.Charis.API.Data.ValueObjects.WaiverTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("MarkDown")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Version")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("WaiverTemplates");
                });

            modelBuilder.Entity("AeonTek.Charis.API.Data.ValueObjects.Contact", b =>
                {
                    b.HasOne("AeonTek.Charis.API.Data.ValueObjects.Volunteer", null)
                        .WithMany("Contacts")
                        .HasForeignKey("VolunteerId");
                });

            modelBuilder.Entity("AeonTek.Charis.API.Data.ValueObjects.Waiver", b =>
                {
                    b.HasOne("AeonTek.Charis.API.Data.ValueObjects.Volunteer", null)
                        .WithMany("Waivers")
                        .HasForeignKey("VolunteerId");
                });

            modelBuilder.Entity("AeonTek.Charis.API.Data.ValueObjects.Volunteer", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("Waivers");
                });
#pragma warning restore 612, 618
        }
    }
}
